---
import { Image } from "astro:assets";
import Form from "../../../../../globals/components/Form/";
import MainLogo from "../../../../../globals/components/logos/MainLogo.astro";
import { type ComponentProps } from "../../../../../globals/types/ComponentProps";
import type { TranslationsType } from "../../../../../globals/types/Translations";
import bg from "../../assets/imgs/v1/header.jpg";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const title: TranslationsType = {
  en: `Get real time trading signals, with our <span class="font-extrabold text-[hsl(var(--secondary-dark))]" >free educational kit!</span>`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const para: TranslationsType = {
  en: `Spot the market opportunities from the comfort of your home, let us do the hard work for you!`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const formTitle: TranslationsType = {
  en: `The easiest way to find trading tips`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const formButton: TranslationsType = {
  en: `Register Today!`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};
---

<header class="relative">
  <Image
    src={bg}
    alt="Background"
    class="absolute inset-0 z-0 h-full w-full object-cover object-left md:object-center"
    widths={[320, 576, 640, 768, 1024, 1280, 1536, bg.width]}
    sizes={`
      (max-width: 320px) 576px,
      (max-width: 576px) 640px,
      (max-width: 640px) 768px,
      (max-width: 768px) 1024px,
      (max-width: 1024px) 1280px,
      (max-width: 1280px) 1536px,
      100vw
    `}
  />
  <div class="relative z-10">
    <div class="!pt-4 sm:p-7 md:p-9 lg:p-10 xl:p-12">
      <div class="container text-white [&>svg]:max-w-full">
        <MainLogo
          size={componentProps.brandObj.nameToLower}
          logo={componentProps.logo()}
          square={componentProps.customOptions?.logoSquare}
        />
      </div>
    </div>
    <div class="pt-4 sm:p-7 md:p-9 lg:p-10 xl:p-12">
      <div class="container flex flex-row-reverse">
        <div class="flex flex-col gap-5 text-white md:w-[60%] md:min-w-[60%]">
          <div
            class="customGradientText flex flex-col gap-3 p-5 text-center sm:text-start lg:p-10"
          >
            <h1
              class="max-w-[20ch] text-v1-heading1 font-semibold uppercase leading-none"
              set:html={title[componentProps.lang]}
            />
            <p class="text-v1-paraLead" set:html={para[componentProps.lang]} />
          </div>
          <div class="customGradientForm flex flex-col gap-4 p-5 lg:p-10">
            <h2
              class="text-v1-heading2 font-extrabold uppercase text-secondary"
              set:html={formTitle[componentProps.lang]}
            />
            <Form
              componentProps={componentProps}
              button={formButton[componentProps.lang]}
              id="form1"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<style define:vars={{}}>
  .customGradientText {
    background:
      linear-gradient(90deg, hsl(var(--secondary)) 8px, transparent 1%) 50%,
      linear-gradient(hsl(var(--secondary)) 8px, transparent 1%) 50%,
      hsl(var(--secondary-variation));
    background-size: 10px 10px;
  }

  .customGradientForm {
    background:
      linear-gradient(
          90deg,
          hsl(var(--primary-variation-1)) 8px,
          transparent 1%
        )
        50%,
      linear-gradient(hsl(var(--primary-variation-1)) 8px, transparent 1%) 50%,
      hsl(var(--primary-variation-2));
    background-size: 10px 10px;
  }
</style>

<style lang="scss" is:global define:vars={{}}>
  form.registerForm {
    .registerFormInner {
      grid-template-columns: 1fr 1fr;
      @container (min-width: 500px) {
        grid-template-columns: 1fr 1fr 1fr 1fr;
      }
      > .form-control {
        grid-column-start: 1;
        grid-column-end: 3;
        @container (min-width: 500px) {
          grid-column-start: 1;
          grid-column-end: 3;
        }
        &.firstNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.lastNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.emailWrapper {
          @container (min-width: 500px) {
            grid-column-start: 3;
            grid-column-end: 5;
          }
        }
        &.countryWrapper {
          @container (min-width: 500px) {
            grid-column-start: 1;
            grid-column-end: 3;
          }
        }
        &.phoneNumberWrapper {
          @container (min-width: 500px) {
            grid-column-start: 3;
            grid-column-end: 5;
          }
        }
        &.agreementWrapper {
          @container (min-width: 500px) {
            grid-column-start: 1;
            grid-column-end: 5;
          }
        }
        &.submitButtonWrapper {
          @container (min-width: 500px) {
            grid-column-start: 1;
            grid-column-end: 5;
          }
        }
        &.riskEsma {
          @container (min-width: 500px) {
            grid-column-start: 1;
            grid-column-end: 5;
          }
        }
      }
    }

    .form-control {
      label {
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-11 bg-white text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply flex h-auto gap-4 border-2 bg-transparent px-4 py-3 text-2xl hover:border-secondary hover:bg-secondary hover:text-secondary-foreground;
      }
    }
  }
</style>
