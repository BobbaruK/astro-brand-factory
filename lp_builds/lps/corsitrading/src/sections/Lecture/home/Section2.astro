---
import Form from "../../../../../../globals/components/Form/";
import useTextVersion from "../../../../../../globals/composables/useTextVersion";
import type { ComponentProps } from "../../../../../../globals/types/ComponentProps.ts";
import type {
  TextVersionTranslation,
  TranslationsType,
} from "../../../../../../globals/types/Translations";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const titleVs: TextVersionTranslation = {
  v1: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "",
    sv: "Få utbildningsmaterial",
    pt: "",
    fi: "",
    pl: ``,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v2: {
    en: "Get educational materials",
    it: "Ricevi materiale formativo",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "Obtenga material educativo",
    sv: "Få utbildningsmaterial",
    pt: "",
    fi: "",
    pl: "Pobierz materiały edukacyjne",
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v3: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "",
    sv: ``,
    pt: "",
    fi: "",
    pl: `Skorzystaj z bezpłatnego kursu edukacyjnego`,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v4: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "Reciba nuestro kit formativo gratuito",
    sv: "",
    pt: "",
    fi: "",
    pl: ``,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
};
const title = useTextVersion(
  titleVs,
  componentProps.textVersion,
) as TranslationsType;

const formBtnVs: TextVersionTranslation = {
  v1: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "",
    sv: "Registera nu",
    pt: "",
    fi: "",
    pl: ``,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v2: {
    en: "Learn more!",
    it: "Impara di piú!",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "Aprenda más!",
    sv: "Lär dig mer!",
    pt: "",
    fi: "",
    pl: "Zarejestruj się teraz!",
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v3: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "",
    sv: ``,
    pt: "",
    fi: "",
    pl: `Zarejestruj się teraz`,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
  v4: {
    en: "",
    it: "",
    tr: "",
    ro: "",
    ar: "",
    de: "",
    es: "Registrarse ahora",
    sv: "",
    pt: "",
    fi: "",
    pl: ``,
    hu: "",
    th: "",
    ms: "",
    vi: "",
  },
};
const formBtn = useTextVersion(
  formBtnVs,
  componentProps.textVersion,
) as TranslationsType;
---

<section id="section2" class="bg-black text-white">
  <div class="py-2 lg:bg-primary">
    <div class="container">
      <h2
        class="text-center text-Lecture-heading2 font-bold uppercase"
        set:html={title[componentProps.lang]}
      />
    </div>
  </div>
  <div class="container py-4 lg:pb-0">
    <Form
      componentProps={componentProps}
      button={formBtn[componentProps.lang]}
      id="form1"
    />
  </div>
</section>

<style lang="scss" is:global>
  form.registerForm {
    .registerFormInner {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: repeat(4, auto);
      @container (min-width: 750px) {
        grid-template-columns: 1fr 1fr 1fr;
      }
      > .form-control {
        grid-column-start: 1;
        grid-column-end: 3;
        @container (min-width: 750px) {
          grid-column-start: 1;
          grid-column-end: 3;
        }

        &.firstNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.lastNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.emailWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
          }
        }
        &.countryWrapper {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.phoneNumberWrapper {
          @container (min-width: 750px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.agreementWrapper,
        &.riskEsma {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 4;
          }
        }
        &.submitButtonWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
            grid-row-start: 2;
            grid-row-end: 3;
          }
        }
      }
    }

    .form-control {
      label {
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply h-12 text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply flex h-12 gap-4 bg-secondary uppercase text-secondary-foreground hover:bg-primary hover:text-primary-foreground;
      }
    }
  }
</style>
