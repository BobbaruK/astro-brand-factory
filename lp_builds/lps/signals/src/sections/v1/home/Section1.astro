---
import Form from "../../../../../../globals/components/Form/";
import type { ComponentProps } from "../../../../../../globals/types/ComponentProps";
import type { TranslationsType } from "../../../../../../globals/types/Translations";

interface Props {
  componentProps: ComponentProps;
}
const { componentProps } = Astro.props;

const para1: TranslationsType = {
  en: `Every trader knows that the difference between success and failure is due to the speed of information. To earn from trading, actual data and development models are crucial.`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const para2: TranslationsType = {
  en: ` We provide free trading signals, directly to your cell phone so you can always be aware of the market and make the right decision at the right time.`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};

const formBtnLabel: TranslationsType = {
  en: `Start Now`,
  it: ``,
  tr: ``,
  ro: ``,
  ar: ``,
  de: ``,
  es: ``,
  sv: ``,
  pt: ``,
  fi: ``,
  pl: ``,
  hu: ``,
  th: ``,
  ms: ``,
  vi: ``,
};
---

<section class="py-5 md:py-9 md:pb-12 lg:py-10 xl:py-14">
  <div class="container flex flex-col gap-4 md:flex-row lg:gap-36">
    <div
      class="flex grow flex-col justify-center gap-4 text-center md:text-start md:text-[18px]"
    >
      <p set:html={para1[componentProps.lang]} />
      <p
        class="font-extrabold uppercase"
        set:html={para2[componentProps.lang]}
      />
    </div>
    <div class="flex flex-col gap-4 md:w-[40%] md:min-w-[40%]">
      <h2 class="flex flex-col gap-4 text-center md:text-start">
        <span
          class="block text-[40px] font-extrabold underline decoration-8 underline-offset-[16px]"
        >
          Sign up now
        </span>
        and get professional trading signals for free! *
      </h2>
      <Form
        componentProps={componentProps}
        button={formBtnLabel[componentProps.lang]}
        id="form1"
      />
    </div>
  </div>
</section>

<style lang="scss" is:global>
  form.registerForm {
    input,
    select {
      @apply text-slate-800;
    }
    input[disabled] {
      // color: white;
    }

    .registerFormInner {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: repeat(4, auto);
      @container (min-width: 750px) {
        grid-template-columns: 1fr 1fr 1fr;
      }
      > .form-control {
        grid-column-start: 1;
        grid-column-end: 3;
        @container (min-width: 750px) {
          grid-column-start: 1;
          grid-column-end: 3;
        }

        &.firstNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.lastNameWrapper {
          @container (min-width: 430px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.emailWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
          }
        }
        &.countryWrapper {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 2;
          }
        }
        &.phoneNumberWrapper {
          @container (min-width: 750px) {
            grid-column-start: 2;
            grid-column-end: 3;
          }
        }
        &.agreementWrapper,
        &.riskEsma {
          @container (min-width: 750px) {
            grid-column-start: 1;
            grid-column-end: 4;
          }
        }
        &.submitButtonWrapper {
          @container (min-width: 750px) {
            grid-column-start: 3;
            grid-column-end: 4;
            grid-row-start: 2;
            grid-row-end: 3;
          }
        }
      }
    }

    .form-control {
      label {
        font-size: 1rem;
      }
      input[type="text"],
      input[type="email"],
      input[type="tel"],
      select {
        // border: medium none;
        // max-width: 100%;
        // padding: 5px 15px;
        // transition: 350ms;
        // width: 100%;

        @apply border border-black text-black;
        &:hover {
        }
        &:focus {
        }
        &::placeholder {
        }
      }
      button {
        @apply flex h-auto gap-4 bg-secondary p-2 py-4 text-xl uppercase text-secondary-foreground hover:bg-primary hover:text-primary-foreground;
      }
    }
  }
</style>
